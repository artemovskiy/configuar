stages:
  - test
  - publish

.base:
  image: node:12.7-alpine
  before_script:
    - echo "//gitlab.com/api/v4/packages/npm/:_authToken=${CI_JOB_TOKEN}" > .npmrc
    - echo "//gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}">>.npmrc
    - echo "@bothelp:registry=https://gitlab.com/api/v4/packages/npm/">>.npmrc
    - npm install
  tags:
    - docker-runner
    - baremetal
    - build
  only:
    - branches
    - tags

.test-base:
  extends: .base
  stage: test

test:
  extends: .test-base
  script:
    - npm run test:ci
  artifacts:
    when: always
    reports:
      cobertura:
        - coverage/cobertura-coverage.xml
      junit:
        - junit.xml
    untracked: true
    paths:
      - coverage
  coverage: '/^(?:Statements|Branches|Functions|Lines)\s*:\s*([^%]+)/'

lint:
  extends: .test-base
  script:
    - npm run lint -- --format gitlab
  artifacts:
    when: always
    reports:
      codequality: gl-codequality.json

.publishing-base:
  extends: .base
  stage: publish

publish-staging:
  extends: .publishing-base
  script:
    - npm run build
    - apk update && apk add jq
    - npm version "$(cat ./package.json | jq -r .version | grep -o -E "^\d+\.\d+\.\d+")-stg.$(date +%s)" > version.txt
    - npm publish
  only:
    - staging

publish:
  extends: .publishing-base
  script:
    - npm run build
    - npm publish --tag $CI_COMMIT_REF_SLUG --verbose
  only:
    - tags
